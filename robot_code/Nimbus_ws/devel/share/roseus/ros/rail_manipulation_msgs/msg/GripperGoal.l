;; Auto-generated. Do not edit!


(when (boundp 'rail_manipulation_msgs::GripperGoal)
  (if (not (find-package "RAIL_MANIPULATION_MSGS"))
    (make-package "RAIL_MANIPULATION_MSGS"))
  (shadow 'GripperGoal (find-package "RAIL_MANIPULATION_MSGS")))
(unless (find-package "RAIL_MANIPULATION_MSGS::GRIPPERGOAL")
  (make-package "RAIL_MANIPULATION_MSGS::GRIPPERGOAL"))

(in-package "ROS")
;;//! \htmlinclude GripperGoal.msg.html


(defclass rail_manipulation_msgs::GripperGoal
  :super ros::object
  :slots (_close _speed _force _position ))

(defmethod rail_manipulation_msgs::GripperGoal
  (:init
   (&key
    ((:close __close) nil)
    ((:speed __speed) 0.0)
    ((:force __force) 0.0)
    ((:position __position) 0.0)
    )
   (send-super :init)
   (setq _close __close)
   (setq _speed (float __speed))
   (setq _force (float __force))
   (setq _position (float __position))
   self)
  (:close
   (&optional __close)
   (if __close (setq _close __close)) _close)
  (:speed
   (&optional __speed)
   (if __speed (setq _speed __speed)) _speed)
  (:force
   (&optional __force)
   (if __force (setq _force __force)) _force)
  (:position
   (&optional __position)
   (if __position (setq _position __position)) _position)
  (:serialization-length
   ()
   (+
    ;; bool _close
    1
    ;; float64 _speed
    8
    ;; float64 _force
    8
    ;; float64 _position
    8
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; bool _close
       (if _close (write-byte -1 s) (write-byte 0 s))
     ;; float64 _speed
       (sys::poke _speed (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _force
       (sys::poke _force (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _position
       (sys::poke _position (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; bool _close
     (setq _close (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;; float64 _speed
     (setq _speed (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _force
     (setq _force (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _position
     (setq _position (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;;
   self)
  )

(setf (get rail_manipulation_msgs::GripperGoal :md5sum-) "782451e32b8c1c12dc59d6162ac85c6b")
(setf (get rail_manipulation_msgs::GripperGoal :datatype-) "rail_manipulation_msgs/GripperGoal")
(setf (get rail_manipulation_msgs::GripperGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define the goal
bool close      # True for close gripper, false for open gripper
float64 speed   # Speed the gripper should move at, in the gripper's preferred units
float64 force   # Force the gripper should move at, in the gripper's preferred units
float64 position # Gripper close position

")



(provide :rail_manipulation_msgs/GripperGoal "782451e32b8c1c12dc59d6162ac85c6b")


